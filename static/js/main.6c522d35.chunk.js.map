{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Photo.js","Components/PhotoWall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","state","_posts","action","type","slice","index","post","comments","postId","comment","Photo","props","className","to","id","src","imageLink","alt","description","onClick","startRemovingPost","history","push","length","PhotoWall","sort","x","y","map","key","AddPhoto","handleSubmit","bind","event","preventDefault","target","elements","link","value","Number","Date","this","startAddingPost","onHistory","onSubmit","placeholder","name","Component","Comments","startAddingComment","hidden","Single","match","params","find","findIndex","loading","Main","startLoadingPost","then","setState","startLoadingComments","exact","path","render","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","addPost","catch","error","console","log","once","snapshot","forEach","childSnapshot","val","loadPosts","remove","removePost","addComment","Object","values","loadComments","App","withRouter","connect","bindActionCreators","actions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6c522d35.chunk.js","sourcesContent":["\r\nconst posts = []\r\n\r\nexport default posts","import _posts from '../data/posts'\r\nimport {combineReducers} from 'redux'\r\n\r\nfunction comments(state={}, action) {\r\n    switch (action.type) {\r\n        case 'ADD_COMMENT':  \r\n        \r\n        if (!state[action.postId]) {\r\n            return {...state, [action.postId]: [action.comment]}\r\n        } else {\r\n            return {...state, [action.postId]: [...state[action.postId], action.comment] }\r\n        }\r\n\r\n        case 'LOAD_COMMENTS': return action.comments\r\n        \r\n        default: return state\r\n    }\r\n    return state\r\n}\r\n\r\n\r\nfunction posts(state = _posts, action) {\r\n    switch (action.type) {\r\n        case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\r\n        case 'ADD_POST': return [...state, action.post]\r\n        case 'LOAD_POSTS': return action.posts\r\n        default: return state\r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\nconst rootReducer = combineReducers({posts, comments})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nfunction Photo(props) {\r\n    const post = props.post\r\n    return <figure className=\"figure\"> \r\n                <Link to={`/single/${post.id}`}> <img className= \"photo\" src={post.imageLink} alt={post.description}/></Link>\r\n                <figcaption> <p> {post.description} </p> </figcaption>\r\n                <div className = \"button-container\">\r\n                <button onClick = {() => {\r\n                    props.startRemovingPost(props.index, post.id)\r\n                    props.history.push('/')\r\n                }}> Remove </button>\r\n                <Link className=\"button\" to={`/single/${post.id}`}> \r\n                    <div className=\"comment-count\"> \r\n                        <div className=\"speech-bubble\"> </div>\r\n                        {props.comments[post.id] ? props.comments[post.id].length : 0 }\r\n                    </div>\r\n                </Link>\r\n                </div>\r\n         </figure>\r\n}\r\n\r\n\r\nPhoto.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nexport default Photo\r\n","import React from 'react'\r\nimport Photo from './Photo'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n//anchor tag, href attribute\r\nfunction PhotoWall(props) {\r\nreturn  <div> \r\n             <Link className = \"addIcon\" to=\"/AddPhoto\"> </Link> \r\n             <div className=\"photoGrid\" >\r\n                  {props.posts\r\n                    .sort(function(x,y) {\r\n                        return  y.id - x.id\r\n                    })\r\n                    .map((post, index) => <Photo key={index} post={post} {...props} index={index}/>)}\r\n             </div>\r\n        </div>\r\n}\r\n\r\nPhotoWall.propTypes = {\r\n    posts: PropTypes.array.isRequired,\r\n}\r\n\r\n\r\n export default PhotoWall","import React, {Component} from 'react'\r\n\r\nclass AddPhoto extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const imageLink = event.target.elements.link.value\r\n        const description = event.target.elements.description.value\r\n        const post = {\r\n            id: Number(new Date()),\r\n            description: description,\r\n            imageLink: imageLink\r\n        }\r\n        if (description && imageLink){\r\n            this.props.startAddingPost(post)\r\n            this.props.onHistory.push('/')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n    <div>\r\n        <div className=\"form\">\r\n          <form onSubmit={this.handleSubmit}> \r\n               <input type =\"text\" placeholder=\"Link\" name=\"link\"/>\r\n               <input type =\"text\" placeholder=\"Desciption\" name=\"description\"/>\r\n               <button> Post </button>\r\n          </form>\r\n        </div>\r\n    </div>\r\n    )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AddPhoto","import React, {Component} from 'react'\r\n\r\n\r\nclass Comments extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const comment = event.target.elements.comment.value\r\n        this.props.startAddingComment(comment, this.props.id)\r\n        event.target.elements.comment.value = ''\r\n    }\r\n\r\n    render() {\r\n       return <div className=\"comment\">\r\n       {\r\n           this.props.comments.map((comment, index) => {\r\n               return (\r\n                   <p key={index}> {comment} </p>\r\n               )\r\n           })\r\n\r\n       }\r\n            <form className=\"comment-form\" onSubmit={this.handleSubmit}> \r\n                <input type=\"text\" placeholder=\"comment\" name=\"comment\"/>\r\n                <input type=\"submit\" hidden/>\r\n            </form>\r\n            \r\n            \r\n         </div>\r\n    }\r\n}\r\n\r\nexport default Comments","import React, {Component} from 'react'\r\nimport Photo from './Photo'\r\nimport Comments from './Comments'\r\n\r\nclass Single extends Component {\r\n    render() {\r\n        const {match, posts} = this.props\r\n        const id = Number(match.params.id)\r\n        const post = posts.find((post) => post.id === id)\r\n        const comments = this.props.comments[match.params.id] || []\r\n        const index = this.props.posts.findIndex((post) => post.id === id)\r\n        if (this.props.loading === true) {\r\n            return <div className=\"loader\"> ...loading </div>\r\n        } else if (post) { \r\n\r\n            return <div className='single-photo'>\r\n                 <Photo post={post} {...this.props} index={index}/>\r\n                 <Comments startAddingComment={this.props.startAddingComment} comments={comments} id = {id}/>\r\n                 </div> \r\n        } else {\r\n            return <h1> ...no post found </h1>\r\n        }\r\n          \r\n    } \r\n}\r\n\r\nexport default Single","import React, {Component} from 'react'\r\nimport PhotoWall from './PhotoWall'\r\nimport AddPhoto from './AddPhoto'\r\nimport {Route, Link} from 'react-router-dom'\r\nimport Single from './Single'\r\n\r\nclass Main extends Component {\r\n \r\n    state = { loading: true }\r\n\r\n    componentDidMount() {\r\n        this.props.startLoadingPost().then(() => {\r\n            this.setState({loading: false})\r\n        })\r\n        this.props.startLoadingComments()\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n        \r\n        <div>\r\n            <h1> \r\n                <Link to=\"/\"> Photowall </Link>    \r\n             </h1>\r\n\r\n            <Route exact path = \"/\" render={() => (\r\n                 <div>\r\n                      <PhotoWall {...this.props} />   \r\n                 </div>\r\n\r\n            )}/> \r\n\r\n            <Route path= \"/AddPhoto\" render = {({history}) => (\r\n                <AddPhoto {...this.props} onHistory={history}/>\r\n            )}/>\r\n\r\n            <Route exact path=\"/single/:id\" render = {(params) => (\r\n                <Single  loading={this.state.loading} {...this.props} {...params}/> \r\n            )}/>\r\n            \r\n\r\n         </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Main","import * as firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDn2e808m9Fb-vvbXuc5Y1fGuawwcSvWqI\",\r\n    authDomain: \"photowall-20b9d.firebaseapp.com\",\r\n    databaseURL: \"https://photowall-20b9d.firebaseio.com\",\r\n    projectId: \"photowall-20b9d\",\r\n    storageBucket: \"photowall-20b9d.appspot.com\",\r\n    messagingSenderId: \"732131296565\",\r\n    appId: \"1:732131296565:web:7e2c3ca78563176c94787c\",\r\n    measurementId: \"G-JED0MBVNSN\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  //firebase.analytics();\r\n\r\n  const database = firebase.database()\r\n\r\n  export {database}","import {database} from '../database/config'\r\nexport function startAddingPost(post) {\r\n    return (dispatch) => {\r\n        return database.ref('posts').update({[post.id]: post}).then(() => {\r\n            dispatch(addPost(post))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n} \r\n\r\nexport function startLoadingPost() {\r\n    return (dispatch) => {\r\n        return database.ref('posts').once('value').then((snapshot) => {\r\n           let posts = []\r\n           snapshot.forEach((childSnapshot) => {\r\n            posts.push(childSnapshot.val())\r\n           })\r\n           dispatch(loadPosts(posts))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startRemovingPost(index, id) {\r\n    return (dispatch) => {\r\n        return database.ref(`posts/${id}`).remove().then(() => {\r\n            dispatch(removePost(index))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startAddingComment(comment, postId) {\r\n    return (dispatch) => {\r\n        return database.ref('comments/'+postId).push(comment).then(() => {\r\n            dispatch(addComment(comment, postId))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startLoadingComments() {\r\n    return (dispatch) => {\r\n        return database.ref('comments').once('value').then((snapshot) => {\r\n            let comments = {}\r\n            snapshot.forEach((childSnapshot) => {\r\n                comments[childSnapshot.key] = Object.values(childSnapshot.val())\r\n            })\r\n            dispatch(loadComments(comments))\r\n        })\r\n    }\r\n}\r\n\r\nexport function loadComments(comments) {\r\n    return {\r\n        type: 'LOAD_COMMENTS',\r\n        comments\r\n    }\r\n}\r\n\r\n\r\nexport function removePost(index) {\r\n    return {\r\n        type: 'REMOVE_POST',\r\n        index\r\n    }\r\n}\r\n\r\nexport function addPost(post) {\r\n    return {\r\n        type: 'ADD_POST',\r\n        post\r\n    }\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n    return {\r\n        type: 'ADD_COMMENT',\r\n        comment,\r\n        postId\r\n    }\r\n}\r\n\r\nexport function loadPosts(posts) {\r\n    return {\r\n        type: 'LOAD_POSTS',\r\n        posts\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//adding post","import Main from './Main'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport * as actions from '../redux/actions'\r\nimport {withRouter} from 'react-router'\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        posts: state.posts,\r\n        comments: state.comments\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(actions, dispatch)\r\n\r\n}\r\n\r\nconst App = withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/stylesheet.css'\nimport {BrowserRouter} from 'react-router-dom'\nimport {HashRouter} from 'react-router-dom'\nimport {createStore, applyMiddleware} from 'redux'\nimport rootReducer from './redux/reducer'\nimport {Provider} from 'react-redux'\nimport App from './Components/App'\nimport thunk from 'redux-thunk'\nimport {database} from './database/config'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><HashRouter><App/></HashRouter></Provider>, document.getElementById('root'))\n"],"sourceRoot":""}